AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Timesheets multi-module Lambda stack

Globals:
  Function:
    Runtime: python3.13
    Timeout: 30
    MemorySize: 256

Parameters:
  ExistingLambdaExecutionRoleArn:
    Type: String
    Description: ARN of an existing IAM role to use as Lambda execution role (must trust lambda.amazonaws.com and have necessary policies attached)
    Default: arn:aws:iam::026090520154:role/service-role/lambda_funtion-role-snw92egs

Resources:
  TimesheetsGTFApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: timesheets_gtf
      StageName: prod

  ApprovalsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: approval
      CodeUri: approvals/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /approvals
            Method: ANY

  ClientTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: clients
      CodeUri: client_table/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /client_table
            Method: ANY

  ContactsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: contacts
      CodeUri: contacts/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /contacts
            Method: ANY

  DashboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dashboard
      CodeUri: dashboard/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /dashboard
            Method: ANY

  IamFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: iam
      CodeUri: iam/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /iam
            Method: ANY

  LookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: lookup
      CodeUri: lookup/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /lookup
            Method: ANY

  ProjectsTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: projects
      CodeUri: projects_table/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /projects_table
            Method: ANY

  ProjectAssignmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: projects_assignment
      CodeUri: project_assignment/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /project_assignment
            Method: ANY

  TasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: tasks
      CodeUri: tasks/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /tasks
            Method: ANY

  TimeentriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: timeentries
      CodeUri: timeentries/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /timeentries
            Method: ANY

  UpdatePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update_password
      CodeUri: update_password/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /update_password
            Method: ANY

  UserLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: login
      CodeUri: user_login/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /user_login
            Method: ANY

  UserRoutesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: users
      CodeUri: user_routes/
      Handler: lambda_function.lambda_handler
      Role:
        Ref: ExistingLambdaExecutionRoleArn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: TimesheetsGTFApi
            Path: /user_routes
            Method: ANY

Outputs:
  ApiGatewayId:
    Description: ID of the API Gateway
    Value:
      Ref: TimesheetsGTFApi
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-ApiGatewayId'

  ApiGatewayUrl:
    Description: URL of the API Gateway
    Value:
      Fn::Sub: 'https://${TimesheetsGTFApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-ApiGatewayUrl'
